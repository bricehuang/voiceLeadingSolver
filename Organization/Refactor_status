chord_data ALL CLEAN
chords ALL CLEAN OR MARKED DEPRECATED
music ALL CLEAN
player
	- ProgressionPlayer DIRTY
score_data ALL CLEAN
scorer 
	- Doubling DIRTY
	- PacDeprecated DEPRECATED
	- DoublingInCadence DIRTY
	- VoiceOverlap DIRTY

	- CadenceSmallMovement DIRTY
	- II7Suspension DIRTY
	- MelodicIntervals DIRTY
	- NeapolitanResolution DIRTY
	- ParallelsDirects DIRTY
	- SevenChordResolution DIRTY 
	- SmallMovement DIRTY
	- VoiceCrossing DIRTY
	
	- Scorer DIRTY
scorer_chords
	- ChordScorer CLEAN
	- DoublingCadenceScorer TODO
	- DoublingScorer TODO
	- PacScorer CLEAN
	- VoiceOverlapScorer TODO
scorer_transitions
	- CadenceMovementScorer TODO
	- Dim7ResolutionScorer TODO
	- DirectsScorer TODO
	- Dom7ResolutionScorer TODO
	- II7SuspensionScorer TODO
	- MelodicIntervalScorer TODO
	- MovementScorer TODO
	- NeaploitanResolutionScorer TODO
	- ParallelsScorer TODO
	- TransitionScorer CLEAN
	- VoiceCrossingScorer TODO
solver
	- BestListDeprecated DEPRECATED
	- BestProgressionList CLEAN
	- BestProgressionsByLast CLEAN
	- ChordGenerator CLEAN WITH DEPRECATED METHODS MARKED
	- ChordProgWithScoreDeprecated DEPRECATED
	- Main DIRTY (move to own package?)
	- Parser NEEDS REFACTORING (move to own package?) 
	- ScoredProgression CLEAN
	- Sequencer DIRTY
	- Solver DIRTY
	- SortedFiniteProgListDeprecated DEPRECATED
	
Updated scorer/score interface: scorer takes in (ChordWithContext) 
or (ChrodWithContext, ChordWithContext) and returns Map<ChordPenaltyType, Integer> 
or Map<TransitionPenaltyType, Integer>, which gets passed as arg to score.update().  
Score.update() has arg Map<PenaltyType, Integer>

Scorer methods will be instance, not static.  In Scorer there can be a list
ALL_CHORD_SCORERS=Arrays.asList(new blah1(), new blah2(), ...)
for (scorer : ALL_CHORD_SCORERS){
	score.update(scorer.score(current_chord))
}     

A random TODO: turn on tab=4 spaces in eclipse???